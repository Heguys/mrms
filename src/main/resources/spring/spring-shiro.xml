<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                       http://www.springframework.org/schema/beans/spring-beans.xsd"
       default-lazy-init="true">
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"></bean>
    <bean id="sessionDao" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
        <property name="cacheManager" ref="shiroCacheManager" />
        <property name="sessionIdGenerator" ref="sessionIdGenerator"></property>
    </bean>
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 相隔多久检查一次session的有效性   -->
        <property name="sessionValidationInterval" value="1800000"/>
        <!-- session 有效时间为半小时 （毫秒单位）-->
        <property name="globalSessionTimeout" value="1800000"/>
        <!-- 是否开启 检测，默认开启 -->
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <!-- 是否删除无效的，默认也是开启 -->
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionDAO" ref="sessionDao"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"></property>
    </bean>
    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
        <!-- 设置调度时间间隔，单位毫秒，默认就是1小时 -->
        <property name="interval" value="1800000"/>
        <!-- 设置会话验证调度器进行会话验证时的会话管理器 -->
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
    <bean id="kickoutSessionControlFilter" class="com.hxminco.mrms.ext.shiro.KickoutSessionControlFilter">
        <property name="cacheManager" ref="shiroCacheManager"/>
        <property name="sessionManager" ref="sessionManager"/>
        <!-- 是否踢出后来登录的，默认是false；即后者登录的用户踢出前者登录的用户 -->
        <property name="kickoutAfter" value="false"/>
        <!-- 同一个用户最大的会话数，默认1；比如2的意思是同一个用户允许最多同时两个人登录 -->
        <property name="maxSession" value="1"/>
        <property name="kickoutUrl" value="/login.html?kickout=1"/>
    </bean>

    <bean id="studentRealm" class="com.hxminco.mrms.ext.shiro.StudentRealm">
        <property name="supportedLoginType" value="student"></property>
    </bean>
    <bean id="teacherRealm" class="com.hxminco.mrms.ext.shiro.TeacherRealm">
        <property name="supportedLoginType" value="teacher"></property>
    </bean>
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="cacheManager" ref="shiroCacheManager"/>
        <property name="authenticator" ref="defineModularRealmAuthenticator" />
        <property name="authorizer" ref="myModularRealmAuthorizer" />
        <property name="sessionManager" ref="sessionManager"></property>
        <property name="realms">
            <list>
                <ref bean="studentRealm" />
                <ref bean="teacherRealm" />
            </list>
        </property>
    </bean>

    <bean id="formAuthenticationFilter"
          class="com.hxminco.mrms.ext.shiro.MyFormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <!--该参数定义了用户表单中提交的'登陆类型'这个参数的名称-->
        <property name="loginTypeParamName" value="loginType"/>
        <property name="loginUrl" value="/login.html"/>
        <property name="successUrl" value="/main.html"/>
    </bean>

    <bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/login.html" />
    </bean>
    <bean id="myModularRealmAuthorizer"
          class="com.hxminco.mrms.ext.shiro.MyModularRealmAuthorizer"></bean>
    <bean id="defineModularRealmAuthenticator"
          class="com.hxminco.mrms.ext.shiro.MyModularRealmAuthenticator">
        <property name="definedRealms">
            <map>
                <entry key="studentRealm" value-ref="studentRealm" />
                <entry key="teacherRealm" value-ref="teacherRealm" />
            </map>
        </property>
    </bean>

    <bean id = "roleFilter" class="	com.hxminco.mrms.ext.shiro.RolesTAndSFilter">
        <property name="unauthorizedUrl" value="/unauthorized.html"></property>
    </bean>

        <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口,这个属性是必须的 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
        <property name="loginUrl" value="/login.html"/>
        <property name="successUrl" value="/main.html" />
            <property name="unauthorizedUrl" value="/unauthorized.html"/>
        <property name="filters">
            <map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
                <entry key="roles" value-ref="roleFilter"/>
                <entry key="kickout" value-ref="kickoutSessionControlFilter"/>
                <entry key="logout" value-ref="logout"/>
            </map>
        </property>
        <!-- 用户访问未对其授权的资源时,所显示的连接 -->
        <!-- 若想更明显的测试此属性可以修改它的值,如unauthor.jsp,然后用[玄玉]登录后访问/admin/listUser.jsp就看见浏览器会显示unauthor.jsp -->
        <property name="filterChainDefinitions">
            <value>
                /login.html=authc
                /doLogin.html=anon
                /teacher/**=kickout,roles[teacher]
                /student/**=kickout,roles[student]
                /admin/**=kickout,roles[admin]
                /logout.html=logout
                /res/**=anon
                /**=kickout,authc
            </value>
        </property>
    </bean>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!-- 设置Cookie名字，默认为JSESSIONID -->
        <!--         <constructor-arg value="bjg_sid"/> -->
        <!-- 不修改使用默认的话，那么404的时候session就会过期 -->
        <property name="name" value="mrms_sid"/>
        <!--
            如果设置为true，则客户端不会暴露给客户端脚本代码，使用HttpOnly cookie有助于减少某些类型的跨站点脚本攻击；
            此特性需要实现了Servlet 2.5 MR6及以上版本的规范的Servlet容器支持
         -->
        <property name="httpOnly" value="true"/>
        <!-- 设置Cookie的过期时间，秒为单位，默认-1表示关闭浏览器时过期Cookie -->
        <property name="maxAge" value="-1"/>
        <!-- 设置Cookie的域名，默认空，即当前访问的域名 -->
        <!--         <property name="domain" value=".bejavagod.com"/> -->
    </bean>
</beans>